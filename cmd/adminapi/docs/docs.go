// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buildings": {
            "get": {
                "description": "Возвращает список всех зданий.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Получить список зданий.",
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Создает новое здание.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Создать здание.",
                "parameters": [
                    {
                        "description": "Данные здания",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid JSON\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/buildings/{build_id}": {
            "get": {
                "description": "Возвращает информацию о здании по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Получить здание по ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "build_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid build_id\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\\\"error\\\": \\\"build not found\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buildings/{build_id}/floors": {
            "get": {
                "description": "Возвращает список этажей указанного здания.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Получить этажи здания.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "build_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid build_id\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buildings/{build_id}/objects": {
            "get": {
                "description": "Возвращает все объекты указанного здания.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Получить объекты здания.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "build_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid build_id\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buildings/{build_id}/search": {
            "get": {
                "description": "Поиск объектов по названию и категории.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Поиск объектов.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "build_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр по категориям",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid building_id\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/buildings/{building_id}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Удаляет здание по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Удалить здание",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "building_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Обновляет данные здания.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildings"
                ],
                "summary": "Обновить здание.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "building_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные здания",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid building_id\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/buildings/{building_id}/floors/{floor_id}/objects": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Создает новый объект на указанном этаже здания.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Создать объект.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID здания",
                        "name": "building_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID этажа",
                        "name": "floor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные объекта",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid floor_id\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Возвращает список всех категорий объектов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Получить категории объектов.",
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/floors/{floor_id}/poligons": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Создает новый полигон на указанном этаже.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polygons"
                ],
                "summary": "Создать полигон.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID этажа",
                        "name": "floor_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные полигона",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid floor_id\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/objects/{object_id}": {
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Обновляет данные объекта.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Objects"
                ],
                "summary": "Обновить объект.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID объекта",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные объекта",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid object_id\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/route/connections": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Добавляет соединение между точками пересечения.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route"
                ],
                "summary": "Добавить соединение.",
                "parameters": [
                    {
                        "description": "Данные соединения",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"invalid JSON\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/route/intersections": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Добавляет новую точку пересечения для маршрутизации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route"
                ],
                "summary": "Добавить точку пересечения.",
                "parameters": [
                    {
                        "description": "Координаты точки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "{\\\"error\\\": \\\"x and y must be non-zero\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "{\\\"error\\\": \\\"internal server error\\\"}",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Admin API",
	Description:      "This is an admin API for UTMN Map management",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
