services:
  postgres:
    image: postgres:latest
    container_name: postgres_utmn_map
    restart: always
    environment:
      POSTGRES_USER: utmn_user
      POSTGRES_PASSWORD: utmn_password
      POSTGRES_DB: utmn_map
    ports:
      - "5432:5432"
    volumes:
      - pg_go_utmn_map_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U utmn_user -d utmn_map" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_error_verbosity=verbose"
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  publicapi:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: publicapi
    image: utmn-map-go-backend/publicapi:latest
    ports:
      - "8000:8000"
    volumes:
      - ./config/publicapi.docker.yaml:/app/config.yaml:ro
    entrypoint: ["./publicapi", "--config", "config.yaml"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  adminapi:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: adminapi
    image: utmn-map-go-backend/adminapi:latest
    ports:
      - "8001:8001"
    volumes:
      - ./config/adminapi.docker.yaml:/app/config.yaml:ro
    entrypoint: ["./adminapi", "--config", "config.yaml"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  authapi:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: authapi
    image: utmn-map-go-backend/authapi:latest
    ports:
      - "8002:8002"
    volumes:
      - ./config/authapi.docker.yaml:/app/config.yaml:ro
    entrypoint: [ "./authapi", "--config", "config.yaml" ]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  bot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: bot
    image: utmn-map-go-backend/bot:latest
    ports:
      - "8003:8003"
    volumes:
      - ./config/bot.docker.yaml:/app/config.yaml:ro
    entrypoint: ["./bot", "--config", "config.yaml"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_go_utmn_map_data:
    driver: local
